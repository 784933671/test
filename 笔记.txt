选择器 

1.id 
2.class


   #d3>p{
		color:red    // 伪类选择器定义
  }

  .d4 p{
		color:yellow // 类选择器的定义
  }


 #d3 p{
		color:green // id选择器的定义
  }  


三、选择器的优先级

选择器类型        权值
元素选择器        0001    （又叫标签选择器  语法p{....}  p为选择器名称）
类选择器           0010      （语法格式：.p{....} p为选择器名称）
伪类选择器        0010
ID选择器           0100       （语法格式： #p{...} p为选择器名称）
内联样式表        1000

选择器的权值加到一起，大的优先；如果权值相同，后定义的优先。

%（百分比),px(像素），em（1em 等于当前字体的尺寸 2em等于当前字体尺寸的两倍）

background：背景

五、颜色单位(color:xx)
1、rgb(x,x,x )  X 的取值范围是0-255  值越大颜色越明显(color:rgb(x,x,x))
2、#rrggbb:十六进制数   （background-color:#abcdef）
3、直接为颜色的英文单词，比如：red

六、尺寸
尺寸属性是用于设置元素的高度和宽度的
width：值  ；
height：值；
px em %
七、文本的字体大小
font-size: 值；
px em % 

八 文本段落行高

可以使用line-height 进行行高的设置。与高度一致，可以让文本垂直居中。

九、溢出
overflow:值（hidden scroll auto）
hidden 隐藏溢出的
scroll   始终有滚动条
auto    自动显示滚动条
使用尺寸属性控制边框的大小时，如果内容所需的控件大于边框本身的空间，就会导致内容溢出。

overflow-x overflow-y

十、边框
border:值 值 值（width style color）
border - left/right/top/bottom

style 的取值：dotted /solid/double/dashed
dotted:圆点虚线
solid：单实线
double:双实线
dashed:短虚线

border-radius 边框倒角
取值 百分比或者数字
border-top-left-radius:
border-bottom-right-radius:
先上下，再左右

十一、边框阴影
box-shadow:向方框添加一个或者多个阴影
取值为多个属性的列表
box-shadow: h-shadow v-shadow blur spread color inset/outset
h-shadow 水平阴影的位置
v-shadow 垂直阴影的位置
blur 模糊距离
spread 阴影的尺寸
color 阴影的颜色
inset 将外部阴影改成内部阴影

十二、盒子模型
1、外边距
围绕在元素边框周围的空白区域叫做外边距
margin: 上 右 下 左
margin：（上下）  （左右）
margin： 上  （左右）   下
margin： (上下左右）

margin：0 auto 水平居中
值可以是像素和百分比 可以是负数
2、内边距
padding: 上 右 下 左
padding:：（上下）  （左右）
padding:： 上  （左右）   下
padding:： (上下左右）

值可以是像素和百分比  不能是负数


十三、字体属性

font-size:  值（px、百分比）              字体大小
font-style: 值  （）normal（浏览器默认字体样式）/italic（斜体）/oblique（显示倾斜的字体样式）/inherit（继承父元素的字体样式）
font-family: 值（字体）
font-vatiant:small-caps;（显示小型大写字母字体）

十四、文本属性

color： 文本颜色
text-align:left/center/right   文本水平位置     
line-height: 值  （设置行高 经常用于垂直居中）
text-decoration:none（去除超链接的下划线）/underline（添加下划线） 
text-indent: 值（首行文本缩进）
text-shadow:h-shadow v-shadow blur color   （文字阴影）


(tr>td*2)*2

十五、表格的样式

vertical-align:top/middle/bottom    垂直位置
border-collapse:separate/collapse   （合并相邻边框）

border-collapse:separate collapse

十六、定位
1、普通流定位
      页面中的块级元素从上到下，一个接一个的排列（比如p,div）
      行内元素将在一行中从左到右排列
2、浮动定位
      将元素排除在普通流之外，即元素将脱离文档流
      元素将不再占用空间
      将浮动元素放置在包含框的左边或者右边
      float:left/right

       清除浮动，需在父类上清除 全部的浮动     
	#claer:after{
			content:"";
			display:block;
			clear:both;
		}
3、相对定位
4、绝对定位
5、固定定位

复习：
	浮动：
		HTML：普通流文档
		div,ul,p 块级元素 默认从上到下排列
	使用浮动：
		会使当前块级元素，脱离文档流
	浮动造成的影响：
		高度坍塌
	清除浮动：（3种）
	1、给父元素设置高度；
	2、父元素给overflow:hidden;高度溢出
	3、在浮动元素的下方，添加一个空标签，设置clear:both;
	4、使用内容生成：
								父类 :after{
														content:"";  内容区为空
														display:block;
														clear:both;

								}

	选择器：
	通用\元素\类\id\伪类\分组\派生\子代
	伪类选择器：
		语法：
			任意元素：nth-child(1){			
			}
			odd  表示偶数   even 表示奇数
			child括号后面的数字便是这个元素中的第几个子元素

	列表：（两种）
	  有序列表：
		<ol></ol>   <li></li>
	     列表         列表项
		属性：
			type:取值
			值：i,a,A,1
 	  无序列表：
		<ul></ul>  <li></li>
		属性：
		type:值
		值：disc (实心圆) circle（空心圆） square(小方块)
		list-style:none; 列表格式，去除序列名称


		background  背景
		语法：
		background-color：color;
		background-image:url('xxxxx');
		background:url('d地址') repeat（是否平铺） 0px（向右坐标） 0px（向下坐标）;
		url:统一资源定位符
		repeat:背景平铺
		no-repeat:只有一个

		ftp://176.204.88.88

		定位：
			普通流定位，固定定位，绝对定位，相对定位
			普通流定位：
				页面中的块级元素，从上到下排列
			浮动：
				固定定位
				绝对定位
				相对定位
			属性：position(定位）
			取值：fixed--固定定位/absolute -- 绝对定位 / relative --相对定位
				固定定位：
					当前的元素固定在一定位置，不会（随窗口的变化）发生改变
					any{
							position:fixed;
							top:xxx;
					}
					堆叠属性：
					z-index 指定当前元素的堆叠顺序
					取值： 数值  数值越大 权值越高
					语法： any{
										z-index:10;
					}
				绝对定位：
					指当前元素，相对于已定位的上级元素所做的位置的偏移，如果没有已定位的父元素
					语法： any{
											position:absolute;

					}
				相对定位：
					指定的元素相对于自己原来的位置所做的偏移
					语法：
					any{
							position:relative;
							top:xxx;
					}
复习
	浮动
		html页面元素（标签）脱离普通文档流，不占据空间，造成高度坍塌
	解决浮动造成影响：
		4种：
			1.给父元素添加高度
			2、在造成浮动的元素下方添加空标签，添加class,clear:both 属性
			3、给父元素设置overflow:hidden;
			4、内容生成：after{
					content:"";
					display:block;
					clear:both;
			}
CSS3:
	display 元素的显示方式
	取值：block inline-block none
	background 背景
	1、单参数 取值：color/url();
	2、多参数 取值：url('路径') no-repeat/repeat 水平方向的位置  垂直方向的位置；
	box-shadow 盒子阴影
	取值： 水平方向（0px 四周） 垂直方向（0px 四周） blur spread color inset;

	position： 定位
	固定定位
		position:fixed 当前元素固定在一定的视窗（视口）位置
	相对定位
		position:relative 以自己元素本身的位置发生偏移
	绝对定位
		position:absolute 以上级以定位的元素位置 进行的偏移，如果没有已定位的元素，以body进行偏移

	堆叠顺序：
		z-index: 数值  数值越大 当前元素的权值越高

	文字阴影：
		text-shadow：水平 垂直 blur color；
	文本换行：
		word-wrap: break-word
	
	改变、变化、转换：
		transform：
		取值：translate(xpx,ypx) ---平移
					rotate(30deg)  ---旋转
					scale(倍数）	 ---放大
					skew(xdeg,ydeg)      ---扭曲/翻转

	过渡：
		transition:元素从一种状态/样式 逐渐 改变到另一种状态/样式 的效果
		取值：希望元素发生改变的css 属性（width)        此效果的时长（s）         运动曲线；
		运动曲线：linear/ ease-in /ease-out/ ease-in-out
		指定多个属性可以用逗号隔开；
		
	动画：
		@keyframes 以帧形式显示
		animation:first 4s  以动画的效果来调用元素
		@keyframes first{
			from{
				background:red;
			}
			to{
				background:yellow;
			}
		}
	 animation:动画
	 取值：动画规则名称 动画持续/完成时间 运动曲线 无限循环（infinite) 交替（alternate)


GIT：
	分布式版本控制系统 为了方便管理linux 内核开发而开发
	有效、高速的处理由小到大的项目管理

	管理项目，控制项目的版本，可执行Linux命令

https://git-scm.com/download/win  //GIT官网
https://github.com                //全球最大的开源社区  free
oschaina（国内企业 闭）  gitlab(linux)

邮箱：hot_aries@163.com
用户名：hot-aries
密  码：

git:
本地环境配置：
1.给本机授权使用 github
只执行一次：
命令行： ssh-keygen -t rsa -C "xxxx@xxx.com"
回车*3

(复制：C:\Users\web\.ssh\id_rsa.pub 中的内容 粘贴： github: setting--SSH and GPG keys--NEW SSH keys)

2.全局配置用户名及邮箱：
命令行： git config --global user.name "用户名" 敲回车
				 git config --global user.email "用户邮箱"

3.验证：
命令行:  ssh -T git@github.com
Hi hot-aries! You've successfully authenticated, but GitHub does not provide shell access.




git 基础操作：
	1.git init    //初始化一个本地 git 仓库  （当前文件夹是一个空的文件夹 会生成一个隐藏的.git文件夹）
		执行第二步之前 必须有文件
	2.git add 1.txt //指定添加文件到git 缓存区
	3.git commit -m "注释" //提交并添加注释
	  远程端：需要建立一个仓库
	4.git remote add origin git@github.com:hot-aries/firstgit.git // 指定远程仓库地址
	5.git push -u origin master   //推送

	第二次及以后每次提交：3步
	git add .
	git commit -m "注释"
	git push 

	分支：
		git checkout -b（创建新分支）  branch01(分支名称) //建立并切换到新的分支
		git branch // 查看当前已有分支
		git checkout master //切换回主分支

练习 

	新建仓库，新建分支，模拟第一次、第二次提交


linux
	命令行的基础操作：
		~   指的是根目录
		ls  查看当前目录下面的所有文件
		cd  进入下一个目录（如果要从一个盘到另一个盘 需先进入该盘  cd d: ）
		echo  "">>文件名   //输入文字到一个文件中
		cat  文件名称  //查看文件中的内容
		mkdir 创建一个文件夹
